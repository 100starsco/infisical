name: Detect Non-RE2 Regex

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check-non-re2-regex:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get diff of backend/*
        run: |
          git diff --unified=0 "origin/${{ github.base_ref }}"...HEAD -- backend/ > diff.txt

      - name: Scan backend diff for non-RE2 regex
        run: |
          grep '^+' diff.txt | grep -v '^+++' | sed 's/^\+//' > added_lines.txt

          if [ ! -s added_lines.txt ]; then
            echo "âœ… No added lines in backend/ to check for regex usage."
            exit 0
          fi

          regex_usage_pattern='(^|[^A-Za-z0-9_])(\/[^\/]+\/[gimsuy]*|new RegExp\()'

          # Find all added lines that contain the regex_usage_pattern.
          grep -E "$regex_usage_pattern" added_lines.txt > potential_violations.txt

          if [ -s potential_violations.txt ]; then # If any lines match the regex usage pattern
            # Filter out lines that also contain the string 'new RE2'
            grep -v 'new RE2' potential_violations.txt > actual_violations.txt

            if [ -s actual_violations.txt ]; then # If there are lines left after filtering out 'new RE2'
              echo "ðŸš¨ ERROR: Found forbidden regex pattern (raw literal '/.../' or 'new RegExp(...)') in added/modified backend code."
              echo "Please use 'new RE2(...)' for all regular expressions in the backend."
              echo "Offending lines:"
              cat actual_violations.txt
              exit 1
            else
              # All lines that matched regex_usage_pattern also contained 'new RE2'.
              echo "âœ… All identified regex usages are correctly using 'new RE2(...)'."
            fi
          else
            # No lines matched the regex_usage_pattern at all.
            echo "âœ… No raw regex literals ('/.../') or 'new RegExp(...)' usage found in added/modified backend lines."
          fi
