// Code generated by automation script, DO NOT EDIT.
// Automated by pulling database and generating zod schema
// To update. Just run npm run generate:schema
// Written by akhilmhdh.

import { z } from "zod";

import { zodBuffer } from "@app/lib/zod";

import { TImmutableDBKeys } from "./models";

export const GatewayInstanceConfigSchema = z.object({
  id: z.string().uuid(),
  caKeyAlgorithm: z.string(),
  isDisabled: z.boolean().default(false).nullable().optional(),
  infisicalClientCaSerialNumber: z.string(),
  infisicalClientCaIssuedAt: z.date(),
  infisicalClientCaExpiration: z.date(),
  encryptedInfisicalClientCaCertificate: zodBuffer,
  encryptedInfisicalClientCaPrivateKey: zodBuffer,
  infisicalClientCertSerialNumber: z.string(),
  infisicalClientCertKeyAlgorithm: z.string(),
  infisicalClientCertIssuedAt: z.date(),
  infisicalClientCertExpiration: z.date(),
  encryptedInfisicalClientCertificate: zodBuffer,
  encryptedInfisicalClientPrivateKey: zodBuffer,
  createdAt: z.date(),
  updatedAt: z.date()
});

export type TGatewayInstanceConfig = z.infer<typeof GatewayInstanceConfigSchema>;
export type TGatewayInstanceConfigInsert = Omit<z.input<typeof GatewayInstanceConfigSchema>, TImmutableDBKeys>;
export type TGatewayInstanceConfigUpdate = Partial<Omit<z.input<typeof GatewayInstanceConfigSchema>, TImmutableDBKeys>>;
